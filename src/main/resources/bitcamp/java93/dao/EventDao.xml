<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bitcamp.java93.dao.EventDao">

  <resultMap type="category" id="themeMap">
     <result column="name" property="thmtname" />
     <collection property="list" ofType="java.util.Map">
       <association property="themeMap" javaType="java.util.Map"> 
      <result property="key" column="thmno"/> 
       <result property="value" column="thmename"></result>
      </association>
    </collection>
  </resultMap>
  
    <resultMap type="category" id="majorMap">
     <result column="name" property="mjrtname" />
     <collection property="list" ofType="java.util.Map">
       <association property="majorMap" javaType="java.util.Map"> 
      <result property="key" column="mjrno"/> 
       <result property="value" column="majrname"></result>
      </association>
    </collection>
  </resultMap>
  
  <resultMap type="category" id="genreMap">
     <result column="name" property="gnrtname" />
     <collection property="list" ofType="java.util.Map">
       <association property="genreMap" javaType="java.util.Map"> 
      <result property="key" column="gnrno"/> 
       <result property="value" column="gnrename"></result>
      </association>
    </collection>
  </resultMap>
  
  <resultMap type="category" id="locationTypeMap">
		<id column="loctno" property="loctno" />
		<result column="loctname" property="loctname" />
		<result column="locname" property="locname" />
	</resultMap>
  
    <resultMap type="hashMap" id="hashMap">
    <result javaType="java.lang.String" column="thmename"></result>
    <result javaType="int" column="thmno"/> 
<!--     <result javaType="int" column="thmno"></result> -->
  </resultMap>

	<resultMap type="event" id="eventMap">
		<id column="eno" property="no" />
		<result column="title" property="title" />
		<result column="gno" property="writer" />
		<result column="location" property="location" />
		<result column="addr" property="address" />
		<result column="pay" property="pay" />
		<result column="req" property="requirement" />
		<result column="cont" property="contents" />
		<result column="dpay" property="downPay" />
		<result column="date" property="date" />
		<association property="musician" resultMap="musicianMap2">
		</association>
		<collection property="genreList" ofType="string"> 
        <result column="genre"/> 
    </collection> 
    <collection property="themeList" ofType="string"> 
        <result column="theme"/> 
    </collection> 
    <collection property="majorList" ofType="string"> 
        <result column="major"/> 
    </collection> 
	</resultMap>
  
  <resultMap type="musician" id="musicianMap2">
    <id column="mno" property="no" />
    <result column="name" property="name" />
    <result column="path" property="photo" />
    <collection property="majorList" ofType="string"> 
        <result column="major2"/> 
    </collection>
    <collection property="genreList" ofType="string"> 
        <result column="genre2"/> 
    </collection> 
    <collection property="themeList" ofType="string"> 
       <result column="theme2"/> 
    </collection>
  </resultMap>


	<select id="selectOngoingList" resultMap="eventMap, musicianMap2">
select e.title, e.eno, mj.name as major, g.name as genre, t.name as theme, l.name as location,
addr, e.pay, date, m.mno, m.name, mu.path as path,
mj2.name as major2, g2.name as genre2, t2.name as theme2
from evn e 
left outer join mjr_evn me on e.eno=me.eno
left outer join gnr_evn ge on e.eno=ge.eno
left outer join thm_evn te on e.eno=te.eno
left outer join mjr mj on me.mjrno=mj.mjrno
left outer join gnr g on ge.gnrno=g.gnrno
left outer join thm t on te.thmno=t.thmno
inner join loc l on e.locno=l.locno
inner join mtc mt on e.eno=mt.eno
inner join memb m on mt.muno=m.mno
inner join musi mu on m.mno=mu.muno
left outer join mjr_musi mjm on mu.muno=mjm.muno left outer join mjr mj2 on mjm.mjrno=mj2.mjrno
left outer join gnr_musi gm on mu.muno=gm.muno left outer join gnr g2 on gm.gnrno=g2.gnrno
left outer join thm_musi tm on mu.muno=tm.muno left outer join thm t2 on tm.thmno=t2.thmno
order by title asc
	</select><!-- 완진 -->
	
	 
  <select id="selectListTheme" resultMap="themeMap">
  select thmt.name, thme.name as thmename, thme.thmno
  from thm as thme left outer join thm_type as thmt on thmt.thmtno = thme.thmtno
  </select><!-- 승민 -->
  
  <select id="selectListMajor" resultMap="majorMap">
  select mjrt.name, majr.name as majrname, majr.mjrno
  from mjr as majr left outer join mjr_type as mjrt on mjrt.mjrtno = majr.mjrtno
  </select><!-- 승민 -->
  
  <select id="selectListGenre" resultMap="genreMap">
  select gnrt.name, gnre.name as gnrename, gnre.gnrno
  from gnr as gnre left outer join gnr_type as gnrt on gnrt.gnrtno = gnre.gnrtno
  </select><!-- 승민 -->
  
  <select id="selectListLocationType" resultMap="locationTypeMap">
  select loctno, name as loctname 
  from loc_type
  order by loctno
  </select><!-- 승민 -->
  
  <select id="selectListLocation" resultMap="locationTypeMap" parameterType="int">
  select locno, name as locname 
  from loc where loctno = #{loctno}
  order by locname
  </select><!-- 승민 -->
  
  <insert id="insert" parameterType="event" 
          useGeneratedKeys="true" keyColumn="eno" keyProperty="no">
    insert into evn(gno, locno, pay, req, cont, addr, date, title) 
    values(#{writer}, #{locno}, #{pay}, #{requirement}, #{contents}, #{address}, #{date}, #{title})
  </insert><!-- 승민 -->
  
  
<insert id="insertTheme" parameterType="map">
  insert into thm_evn(eno, thmno) values(#{eventNo} , #{eventTheme})
</insert>

</mapper>












