<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bitcamp.java93.dao.ChatDao">

  <resultMap type="chat" id="chatMap">
    <id column="chatno" property="no"/>
    <result column="isread" property="isRead"/>
    <result column="date" property="date"/>
    <result column="time" property="time"/>
    <result column="msg" property="message"/>
    <result column="who" property="whose"/>
    <result column="edate" property="eventDate"/>
    <result column="status" property="eventStatus"/>
    <result column="unread" property="unread"/>
    <result column="nick" property="nickName"/>
    <result column="path" property="photo"/>
    <result column="receiver" property="receiverNo"/>
    <result column="sender" property="senderNo"/>
    <result column="unread" property="unread"/>
    <result column="ismusi" property="isMusician"/>
  </resultMap>



 <select id="selectList" resultMap="chatMap" parameterType="int">
  select c.mno as sender, mu.mno as receiver, musi.nick as nick, mu.path,
cast(c.date as date) as date, cast(c.date as time) as time, c.msg, e.date as edate, e.status, c.unread
from memb mu inner join (
  select mno, muno,
  substring_index(group_concat(date order by date desc), ',', 1) as date,
  substring_index(group_concat(msg order by date desc), ',', 1) as msg,
  sum(if(isread='N',if(who=muno, 1, 0), 0)) as unread
  from chat
  group by mno, muno
  having mno=#{no}
) c on mu.mno=c.muno
inner join musi on mu.mno=musi.muno
inner join (
  select muno, max(date) as date, if(max(date) &lt; curdate(), '완료', '진행중') as status
  from (
    select mt.muno, e.eno, e.date as date
    from mtc mt inner join evn e on (mt.eno=e.eno and e.mno=#{no})
    inner join memb m on e.mno=m.mno
  ) e
  group by e.muno
) e on mu.mno=e.muno
order by e.date desc
 </select>

 <select id="selectMusiList" resultMap="chatMap" parameterType="int">
   select c.mno as receiver, c.muno as sender, gm.name as nick, gm.path,
   cast(c.date as date) as date, cast(c.date as time) as time, c.msg, e.date as edate,
   e.status, c.unread, 1 as ismusi
   from memb gm inner join (
     select mno, muno,
     substring_index(group_concat(date order by date desc), ',', 1) as date,
     substring_index(group_concat(msg order by date desc), ',', 1) as msg,
     sum(if(isread='N',if(who=mno, 1, 0), 0)) as unread
     from chat
     group by mno, muno
     having muno=#{no}
   ) c on gm.mno=c.mno
   inner join (
     select mno, max(date) as date, if(max(date) &lt; curdate(), '완료', '진행중') as status
     from (
       select e.mno, e.eno, e.date as date
       from mtc mt inner join evn e on (mt.eno=e.eno and mt.muno=#{no})
       inner join memb m on e.mno=m.mno
     ) e
     group by e.mno
   ) e on gm.mno=e.mno
   order by e.date desc

 </select>


<insert id="insertFirstChat" parameterType="map">
  insert into chat (muno, mno, isread, msg, date, who) 
  values (#{musicianNo}, #{writerNo}, 'N', '매칭되었습니다!', now(), #{writerNo});
</insert>

 <!--
 <select id="selectChatList" resultMap="chatMap" parameterType="map">
  select chatno, isread, cast(date as date) as date, cast(date as time) as time, msg,
  c.muno as receiver, c.mno as sender, who, musi.nick as nick, mu.path
from chat c
inner join memb mu on c.muno=mu.mno inner join musi on mu.mno=musi.muno
inner join memb m on c.mno=m.mno
where c.mno=#{mno} and c.muno=#{muno}
order by date asc
  </select>



  <select id="selectMusiChatList" resultMap="chatMap" parameterType="map">
  select chatno, isread, date, msg, c.muno as senderNo, c.mno as receiverNo, who,
 m.name as nickName, m.path
from chat c
inner join memb mu on c.muno=mu.mno inner join musi on mu.mno=musi.muno
inner join memb m on c.mno=m.mno
where c.mno=#{mno} and c.muno=#{muno}
order by date asc
  </select>




   <select id='selectPhoto' resultType='String' parameterType='int'>
  select mno as receiverNo, name as nickName, path
  select path
  from memb
  where mno=#{no}
  </select> -->
</mapper>
