<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bitcamp.java93.dao.MusicianDao">

  <resultMap type="musician" id="musicianMap">
    <id column="mno" property="no" />
    <result column="name" property="name" />
    <result column="nick" property="nickName" />
    <result column="phone" property="phone" />
    <result column="pwd" property="password" />
    <result column="email" property="email" />
    <result column="age" property="age" />
    <result column="team" property="isTeam" />
    <result column="hpg" property="homepage" />
    <result column="intro" property="intro" />
    <result column="path" property="photo" />
    <result column="gender" property="gender" />
    <result column="score" property="score" />
    <result column="rev" property="review" />
    <result column="popu" property="popularity"/>
    <result column="fav" property="isFavorite"/>
    <collection property="majorList" ofType="string"> 
        <result column="major"/> 
    </collection>
    <collection property="genreList" ofType="string"> 
        <result column="genre"/> 
    </collection> 
    <collection property="themeList" ofType="string"> 
       <result column="theme"/> 
    </collection>
  </resultMap>
  
   <resultMap type="musician" id="musicianMapBasic">
    <id column="mno" property="no" />
    <result column="name" property="name" />
    <result column="nick" property="nickName" />
    <result column="phone" property="phone" />
    <result column="pwd" property="password" />
    <result column="email" property="email" />
    <result column="age" property="age" />
    <result column="team" property="isTeam" />
    <result column="hpg" property="homepage" />
    <result column="intro" property="intro" />
    <result column="path" property="photo" />
    <result column="gender" property="gender" />
    <result column="score" property="score" />
  </resultMap>
  

 <sql id="selectBasic">
    select m.mno, m.name, m.nick, mu.path, pwd, email,phone, gender
    from musi mu inner join memb m on mu.muno=m.mno
  </sql>

  <sql id="selectMajor">
    select m.mno, m.name, m.nick, gender, mu.path, mj.name as major
    from musi mu inner join memb m on mu.muno=m.mno
    left outer join mjr_musi mjm on mu.muno=mjm.muno left outer join mjr mj on
    mjm.mjrno=mj.mjrno
  </sql>
  
  
  
  <sql id="selectAll">
    select m.mno, m.name, m.nick, m.phone, m.email, mu.age, mu.team, mu.hpg, mu.path, mu.gender, 
    mj.name as major, g.name as genre, t.name as theme, mtc.score, mtc.rev, fm.popu, null as fav
  from musi mu inner join memb m on mu.muno=m.mno
  left outer join mjr_musi mjm on mu.muno=mjm.muno left outer join mjr mj on mjm.mjrno=mj.mjrno
  left outer join gnr_musi gm on mu.muno=gm.muno left outer join gnr g on gm.gnrno=g.gnrno
  left outer join thm_musi tm on mu.muno=tm.muno left outer join thm t on tm.thmno=t.thmno
  left outer join mtc on mtc.muno=mu.muno
  left outer join (
  select count(if(muno is not null, 1, 0)) as popu, muno
  from fav_musi
  group by muno
  ) fm on fm.muno=mu.muno
  </sql>
  
  <sql id="selectAll_myFavorite">
  select m.mno, m.name, m.nick, m.phone, m.email, mu.age, mu.team, mu.hpg, mu.path, mu.gender, 
    mj.name as major, g.name as genre, t.name as theme, mtc.score, mtc.rev, fm.popu, fm2.fav
  from musi mu inner join memb m on mu.muno=m.mno
  left outer join mjr_musi mjm on mu.muno=mjm.muno left outer join mjr mj on mjm.mjrno=mj.mjrno
  left outer join gnr_musi gm on mu.muno=gm.muno left outer join gnr g on gm.gnrno=g.gnrno
  left outer join thm_musi tm on mu.muno=tm.muno left outer join thm t on tm.thmno=t.thmno
  left outer join mtc on mtc.muno=mu.muno
  left outer join (
  select count(if(muno is not null, 1, 0)) as popu, muno
  from fav_musi
  group by muno
  ) fm on fm.muno=mu.muno
  left outer join (
    select count(if(muno is not null, 1, 0)) as fav, muno, gno
    from fav_musi
    where gno=5
    group by muno
     ) fm2 on fm2.muno=mu.muno
  </sql>
  
  <sql id="selectAll_recommand">
  select m.mno, m.nick, mu.team, mu.path, 
    mj.name as major, g.name as genre, t.name as theme, mtc.score,
    fm.popu, fm2.fav
  from musi mu inner join memb m on mu.muno=m.mno
  left outer join mjr_musi mjm on mu.muno=mjm.muno left outer join mjr mj on mjm.mjrno=mj.mjrno
  left outer join gnr_musi gm on mu.muno=gm.muno left outer join gnr g on gm.gnrno=g.gnrno
  left outer join thm_musi tm on mu.muno=tm.muno left outer join thm t on tm.thmno=t.thmno
  left outer join mtc on mtc.muno=mu.muno
  left outer join (
  select count(if(muno is not null, 1, 0)) as popu, muno
  from fav_musi
  group by muno
  ) fm on fm.muno=mu.muno
  </sql>

  <select id="selectOne" resultMap="musicianMapBasic">
    <include refid="selectBasic" />
    where m.mno=1
    order by m.name asc
    
  </select>

  <select id="selectRecommandList" resultMap="musicianMap" parameterType="member">
    <include refid="selectAll_recommand" />
    left outer join (
      select count(if(muno is not null, 1, 0)) as fav, muno, gno
      from fav_musi
      where gno=#{no}
      group by muno ) fm2 on fm2.muno=mu.muno
    order by m.name asc
  </select>

  <!-- <select id="selectMajorList" resultMap="musicianMap" parameterType="int"> 
    <include refid="selectMajor"/> where mno = #{no} order by m.name asc </select> -->

  <select id="selectSurfList" resultMap="musicianMap">
  <include refid="selectAll" />
  </select>
  
</mapper>












