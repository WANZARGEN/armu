<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bitcamp.java93.dao.NotificationDao">
  
  <resultMap type="notification" id="notificationMap">
    <id column="notino" property="no"/>
    <result column="type" property="type"/>
    <result column="date" property="date"/>
    <result column="cont" property="contents"/>
    <result column="whom" property="whom"/>
    <result column="isread" property="isread"/>
    <result column="unread" property="unread"/>
    <association property="musician" javaType='Musician'>
      <id property="no" column="musino"/>
    <result property="nickName" column="nick"/>
    <result property="photo" column="musiphoto"/>
    </association>
    <association property="writer" javaType='Member'>
      <id property="no" column="gmno"/>
    <result property="name" column="gmname"/>
    <result property="photo" column="gmphoto"/>
    </association>
    <association property="event" javaType='Event'>
      <id property="no" column="eno"/>
    <result property="title" column="title"/>
    </association>
  </resultMap>


  <update id="updateRead" parameterType="int">
    update noti set isread='Y' where notino=#{no}
  </update><!-- 완진 -->
  
  <select id="selectUnread" resultType="int" parameterType="int">
  select count(*)
  from noti left outer join evn on noti.eno=evn.eno
  where isread='N' and (whom='gmember' or whom='both') and evn.mno=#{no}
  </select><!-- 완진 -->
  
  <select id="selectMusiUnread" resultType="int" parameterType="int">
  select count(*)
  from noti
  where isread='N' and (whom='musician' or whom='both') and muno=#{no}
  </select><!-- 완진 -->
  
 <select id="selectNotiList" resultMap="notificationMap" parameterType="int">
  select  notino, n.type, n.date, n.cont, n.whom, n.eno, if(n.isread='Y', 1, 0) as isread, e.title, 
  gm.mno as gmno, gm.name as gmname, gm.path as gmphoto, 
  n.muno as musino, mu.nick, m.path as musiphoto
from noti n
left outer join memb m on n.muno=m.mno left outer join musi mu on m.mno=mu.muno
inner join evn e on n.eno=e.eno inner join memb gm on e.mno=gm.mno
where gm.mno=#{no} and (n.whom='gmember' or n.whom='both')
order by date desc
  </select><!-- 완진 -->
  
  <select id="selectMusiNotiList" resultMap="notificationMap" parameterType="int">
  select  notino, n.type, n.date, n.cont, n.whom, n.eno, if(n.isread='Y', 1, 0) as isread, e.title, 
  gm.mno as gmno, gm.name as gmname, gm.path as gmphoto, 
  n.muno as musino, mu.nick, m.path as musiphoto
from noti n
left outer join memb m on n.muno=m.mno left outer join musi mu on m.mno=mu.muno
inner join evn e on n.eno=e.eno inner join memb gm on e.mno=gm.mno
where n.muno=#{no} and (n.whom='musician' or n.whom='both')
order by date desc
  </select><!-- 완진 -->
  
  
  <!-- 1.뮤지션에게 일반인이 pr -->
  <insert id="insertEventPrNoti" parameterType="map">
    insert into noti(muno, eno, type, date, cont, whom, prno, isread) 
    values(#{musicianNo}, #{eventNo}, 'pr', NOW(), '제안받은 이벤트', 'musician', #{prno}, 'N')
  </insert><!-- 공통 -->
  
  <!-- 2.뮤지션이 pr 거절 -->
  <insert id="rejectEventPrNoti" parameterType="map">
    insert into noti(muno, eno, type, date, cont, whom, prno, isread) 
    values(#{musicianNo}, #{eventNo}, 'pr_reject', NOW(), '요청 거절', 'gmember', #{prno}, 'N')
  </insert><!-- 공통 -->
  
  <!-- 3. 뮤지션이 pr 수락 -->
  <insert id="acceptEventPrNoti" parameterType="map">
    insert into noti(muno, eno, type, date, cont, whom, prno, isread) 
    values(#{musicianNo}, #{eventNo}, 'pr_accept', NOW(), '요청 수락', 'gmember', #{prno}, 'N')
  </insert><!-- 공통 -->
  
  <!-- 4.일반인에게 뮤지션이 appy -->
  <insert id="insertEventAppyNoti" parameterType="map">
    insert into noti(muno, eno, type, date, cont, whom, appyno, isread) 
    values(#{musicianNo}, #{eventNo}, 'appy', NOW(), '이벤트 지원', 'gmember', #{appyno}, 'N')
  </insert><!-- 공통 -->
  
  <!-- 5.일반인이 appy 거절 -->
  <insert id="rejectEventAppyNoti" parameterType="map">
    insert into noti(muno, eno, type, date, cont, whom, appyno, isread) 
    values(#{musicianNo}, #{eventNo}, 'appy_reject', NOW(), '매칭 거절', 'musician', #{appyno}, 'N')
  </insert><!-- 공통 -->
    
  <!-- 6.일반인이 매칭 확정 -->
  <insert id="insertEventMtcNoti" parameterType="map">
    insert into noti(muno, eno, type, date, cont, whom, mtcno, isread) 
    values(#{musicianNo}, #{eventNo}, 'mtc', NOW(), '매칭 확정', 'both', #{mtcno}, 'N')
  </insert><!-- 공통 -->
  
  <!-- 7.미확정 이벤트 당일 지남 -->
  <insert id="insertEventExpiredNoti" parameterType="map">
    insert into noti(eno, type, date, cont, whom, isread) 
    values(#{eventNo}, 'evn_expired', NOW(), '이벤트 만료', 'gmember', 'N')
  </insert><!-- 공통 -->
  
  <!-- 8.확정 이벤트 당일 -->
  <insert id="insertEventTodayNoti" parameterType="map">
    insert into noti(muno, eno, type, date, cont, whom, mtcno, isread) 
    values(#{musicianNo}, #{eventNo}, 'evn_today', NOW(), '이벤트 만료', 'both', #{mtcno}, 'N')
  </insert><!-- 공통 -->
  
  <!-- 9.뮤지션에게 이벤트 편집 -->
  <insert id="insertEventEditNoti" parameterType="map">
    insert into noti(muno, eno, type, date, cont, whom, appyno, isread) 
    values(#{musicianNo}, #{eventNo}, 'evn_edit', NOW(), '이벤트 편집', 'musician',
     (select appyno from appy where eno=#{eventNo} and muno=#{musicianNo}), 'N')
  </insert><!-- 공통 -->
  
  <!-- 10.뮤지션에게 이벤트 삭제 -->
  <insert id="insertEventDeleteNoti" parameterType="map">
    insert into noti(muno, eno, type, date, cont, whom, appyno, isread) 
    values(#{musicianNo}, #{eventNo}, 'evn_delete', NOW(), '이벤트 삭제', 'musician', 
    	(select appyno from appy where eno=#{eventNo} and muno=#{musicianNo}), 'N')
  </insert><!-- 공통 -->
  
  <!-- 11.일반인이 pr 취소 -->
  <delete id="deleteEventPrNoti" parameterType="int">
    delete from noti where prno = #{prno}
  </delete><!-- 공통 -->
  
  <!-- 12.뮤지션이 appy 취소시 있던 noti 삭제 -->
  <delete id="deleteEventAppyNoti" parameterType="int">
    delete from noti where appyno = #{appyno}
  </delete><!-- 공통 -->
  
  <!-- 13.뮤지션에게 리뷰 입력 -->
  <insert id="insertEventRevNoti" parameterType="map">
    insert into noti(muno, eno, type, date, cont, whom, mtcno, isread) 
    values(#{musicianNo}, #{eventNo}, 'rev', now(), '새로운 리뷰', 'musician' , #{mtcno}, 'N')
  </insert><!-- 공통 -->
  
  
</mapper>












